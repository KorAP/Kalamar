% layout 'main', title => 'KorAP: COSMAS II';

%= page_title

<p> In der folgenden Dokumentation werden einige Funktionalitäten unserer Version der COSMAS II-Abfragesprache vorgestellt. Weitere Informationen finden Sie in der <%= ext_link_to 'Online-Hilfe von COSMAS II', "http://www.ids-mannheim.de/cosmas2/web-app/hilfe/suchfrage/eingabe-zeile/syntax/allgemein.html" %>. </p>
    
<section id="queryterms">
    

<h3>Suchbegriffe</h3>


<p>Ein Suchbegriff in COSMAS II kann ein Wort, ein Satzzeichen oder eine Zahl sein.</p>
    
    

%= doc_query cosmas2 => 'Baum'
    

%= doc_query cosmas2 => '4000'
     

<blockquote class="missing">
 
<p>Interpunktionen werden derzeit von KorAP nicht unterstützt.</p>


</blockquote>
  

<h4>Platzhalteroperatoren</h4>

<p>Darüber hinaus können Suchbegriffe mehrere Platzhalter enthalten, z. B.  <code>?</code> (für genau ein beliebiges Zeichen), <code> + </code> (für genau ein beliebiges oder kein Zeichen)

oder <code> * </code> (für eine beliebige Folge beliebiger oder 0 Zeichen).</p>



    

<%= doc_query cosmas2 => 'Bau?m' %>
    

<%= doc_query cosmas2 => 'Bau+m' %>
    

<%= doc_query cosmas2 => 'Bau*m' %>
    
    

%# TODO:
    

%# TODO:

% # <p> Um Platzhaltersymbole aufzuheben (z. B. damit diese Symbole nicht als Platzhalter interpretiert werden), muss ihnen ein <code>\</code> -Symbol vorangestellt werden.</ p>
    

%# <%= doc_query cosmas2 => 'Student\*in' %>

%# <%= doc_query cosmas2 => 'Student\*in' %>


% # <p> Um das Backslash-Symbol aufzuheben, ist ein weiterer Backslash erforderlich (<code>\\</ code>). </ p>

<h4>Lemmaoperator</h4>

    
<p>Der Lemmaoperator <code>&</code> ermöglicht die Suche nach Flexionsformen eines Wortes, indem dem Lemma (wenn es durch <%= embedded_link_to 'doc', 'default foundry', 'data', 'annotation'%> annotiert ist) ein <code>&amp;</code> vorangestellt wird. Die Form des Lemmas hängt von der Annotation ab.</p>
% # <p>Der Lemmaoperator & ermöglicht nicht nur die Suche nach Flexions-, sondern auch nach Wortbildungsformen // to be extended by the time glemm is ready .. </p>

<%= doc_query cosmas2 => '&laufen' %>
    


<h4>Groß- und Kleinschreibung</h4>


<p>Wenn Sie dem Begriff ein <code>$</code> voranstellen, wird bei der Suche die Groß- / Kleinschreibung nicht berücksichtigt.</ p>
    

<%= doc_query cosmas2 => '$Lauf' %>
    

<h4>Operator für reguläre Ausdrücke </h4>
    
<p>Mit dem Operator <code>#REG(...)</code> können Suchbegriffe mit <%= embedded_link_to 'doc', 'regular expressions', 'ql', 'regexp'%> formuliert werden.</p>
    
    
    

<blockquote class="bug">
 
<p>Reguläre Ausdrücke in COSMAS II sind in KorAP noch nicht ordnungsgemäß (richtig) implementiert. Wenn Sie reguläre Ausdrücke verwenden möchten, lesen Sie bitte <%= embedded_link_to 'doc', 'Poliqarp', 'ql', 'poliqarp-plus # regexp'%>. </ P>
    

</blockquote>
    
    

</section>
    
    

<section id="logical-operators">


<h3> Logische Operatoren </h3>
    

<p> Suchbegriffe können in logischen Operationen mit den Operatoren <code>and</code>, <code>or</code> und <code>not</code> kombiniert werden. Die deutschen Formen werden ebenfalls unterstützt: <code>und</code>, <code>oder</code> und <code>nicht</code>.</p>

<p>Diese Operatoren arbeiten auf Textebene, sodass die folgende Abfrage Treffer für alle Vorkommen ausgibt, bei denen beide Begriffe an einer beliebigen Stelle im selben Text vorkommen.</p>
    

<%= doc_query cosmas2 => 'anscheinend und scheinbar' %>
    

<p>Die folgende Abfrage erzielt Treffer für alle Vorkommen, in denen mindestens einer der Begriffe an einer beliebigen Stelle im Text vorkommt.</p>
    

<%= doc_query cosmas2 => 'anscheinend oder scheinbar' %>
    

<p> Die folgende Abfrage gibt Treffer für alle Vorkommen des ersten Begriffs aus, wobei der Begriff nach dem Operator <code>nicht</code> an keiner Stelle im selben Text vorkommt.</p>
    

<%= doc_query cosmas2 => 'Kegel nicht Kind' %>

<p>Um Ausdrücke als logische Operatoren aufzuheben (d. h. zu verhindern, dass diese Ausdrücke als logische Operatoren interpretiert werden), müssen sie in Anführungszeichen gesetzt werden.</p>
    

<%= doc_query cosmas2 => 'Mann "und" Maus' %>
    
    

</section>
    
    
    

<section id="distance-operators">
    

<h3>Distance Operators</h3>

<h3>Abstandsoperatoren</h3>

<p> Mit Abstandsoperatoren können Sie nach zwei Operanden (Suchbegriffen oder komplexen Suchvorgängen) suchen, die in einem Text in einem bestimmten Abstand voneinander vorkommen oder auch nicht. Wenn die beiden Operanden zusammen vorkommen sollen (dem Operator wird ein <code>/</code> vorangestellt), befinden sich beide Operanden in der Ergebnismenge. Wenn sie nicht zusammen auftreten sollen (dem Operator wird ein <code>%</code> vorangestellt), befindet sich nur der erste Operand in der Ergebnismenge.</p> 

<p>(?) </p>
    

<p>Abstandsoperatoren akzeptieren einen vorangestellten Richtungsparameter.
Indem dem Operator ein <code>+</code> vorangestellt wird (z. B. in <code>/+s0</code>), muss der zweite Operand nach dem ersten Operanden auftreten oder nicht.
Indem dem Operator ein <code>-</code> vorangestellt wird (z. B. in <code>/-s0</code>), muss der zweite Operand vor dem ersten Operanden auftreten oder nicht.
Wenn der Richtungsparameter weggelassen wird, ist die Richtung beider Operanden beliebig.</p>

<p> Abstandsoperatoren akzeptieren die Definition eines Distanzsintervalls durch Anhängen numerischer Werte. Wenn nur ein einzelner numerischer Wert angegeben wird (z. B. in <code>/+s4</code>), wird der definierte Abstand als maximaler Abstand betrachtet. Beide Operanden können also in einem Abstand auftreten oder auch nicht (?), der dem angegebenen Wert entspricht oder darunter liegt. Wenn zwei Zahlenwerte durch das <code>:</code> getrennt angegeben werden (z. B. in <code>/s4: 2</code>), definieren sie ein Intervall, in dem der Abstand verbindlich ist.</p>
    
    

%# <blockquote class="warning">

% # <p> Derzeit werden Intervalle nur als MIN:MAX interpretiert, während COSMAS 2 Intervalle als MAX:MIN definiert, wobei die kleinere Zahl als Minimalwert und die größere Zahl als Maximalwert des Intervalls gilt. <% = ext_link_to 'KorAP übernimmt in naher Zukunft das Verhalten von COSMAS II', "https://github.com/KorAP/Koral/issues/67"%>. </ p>
    

%# </blockquote>

<p> Abstandsoperatoren sind angewiesen (?) auf die Annotation <%= embedded_link_to 'doc', 'default foundry', 'data', 'annotation'%> für Dokumentstrukturen.</p>


<p>Wenn eine Abfrage mehrere Abstandsoperatoren enthält, müssen diese in Klammern gesetzt werden:</p>
    

%= doc_query cosmas2 => '(Tag /+w2 offenen) /+w1 Tür'
    
    

<h4>Word Distance Operator</h4>

<h4>Wortabstandsoperator</h4>


<p>Der Wortabstandsoperator <code>w</code> definiert, wie viele Wörter zwischen zwei Afrageoperanden zulässig oder nicht zulässig sind.</p>


<p>Suche nach zwei Operanden mit bis zu 4 Wörtern in beliebiger Reihenfolge:</p>
    

%= doc_query cosmas2 => 'Gegenwart /w4 Zukunft'


<p>Suche nach zwei Operanden mit 3 bis 4 Wörtern dazwischen, wobei der erste Operand dem zweiten vorausgeht:</p>
    

%= doc_query cosmas2 => 'Gegenwart /+w4:3 Zukunft'
    
    

<p>Search for two consecutive operands in the given order:</p>

<p>Suche nach zwei aufeinanderfolgenden Operanden in der angegebenen Reihenfolge:</p>
    

%= doc_query cosmas2 => 'Gegenwart /+w1:1 Zukunft'
    


<p>Suche nach einem ersten Operanden, dem kein zweiter Operand vorangeht oder folgt:</p>
    

%= doc_query cosmas2 => 'Gegenwart %w1 die'
    
    


<h4>Satzabstandsoperator</h4>
    
    


<p>Der Satzabstandsoperator <code>s</code> definiert, wie viele Sätze zwischen zwei Abfrageoperanden zulässig oder nicht zulässig sind.</p>
    


<p>Der Satzabstand hängt von der Annotation <%= embedded_link_to 'doc', 'default foundry', 'data', 'annotation'%> für Dokumentstrukturen ab.</p>
    
    


<p>Suche nach zwei Operanden, die im selben oder in einem folgenden Satz in beliebiger Reihenfolge vorkommen:</p>
    

%= doc_query cosmas2 => 'offen /s1 Geschäft'
    
    


<p>Suche nach zwei Operanden, die im selben Satz vorkommen mit dem ersten Operanden vor dem zweiten: </p>
    

%= doc_query cosmas2 => 'offen /+s0 Geschäft'
    
    


<p>Suche nach einem ersten Operanden, der nicht mit einem zweiten Operanden im gleichen Satz vorkommt:</ >
    

%= doc_query cosmas2 => 'Gegenwart %s0 Zukunft'
    
    


<h4>Absatzabstandsoperator</h4>
    
    


<p>Der Absatzabstandsoperator <code>p</code> definiert, wie viele Absätze zwischen zwei Suchoperanden zulässig oder nicht zulässig sind.</p>
    


<p>Der Absatzabstand hängt von der Annotation <%= embedded_link_to 'doc', 'default foundry', 'data', 'annotation'%> für Dokumentstrukturen ab.</p>
    
    


<p>Suche nach zwei Operanden, die im selben oder in einem folgenden Absatz in beliebiger Reihenfolge vorkommen:</ p>
    

%= doc_query cosmas2 => 'offen /p1 Geschäft'
    
    


<p>Suche nach zwei Operanden, die im selben vorkommen mit dem ersten Operanden vor dem zweiten:</p>
    

%= doc_query cosmas2 => 'offen /+p0 Geschäft'
    
    


<p>Suche nach einem ersten Operanden, der nicht mit einem zweiten Operanden im selben Absatz vorkommt:</p>
    

%= doc_query cosmas2 => 'Gegenwart %p0 Zukunft'
    
    

<blockquote class="warning">


<p>Die KWIC-Ergebnisliste von (?) Absatzabstandsabfragen überschreitet wahrscheinlich die unterstützte maximale Länge von Trefffern in KorAP und wird daher gekürzt.</p>
    

</blockquote>
    
    

<h4> Multi-Abstandsoperatoren </h4>
    
    


<p>Abstandsoperatoren können kombiniert werden, um die Ergebnismenge weiter einzuschränken. Die Abstandsbedingungen werden durch Komma (ohne Leerzeichen) getrennt.</p>
    


<p>Suche nach &quot;ein Fest&quot; in einem Satz:</p>
    

%= doc_query cosmas2 => 'ein /+w1,s0 Fest'
    
    


<h4>Abstandsauslassoperator</h4>
    


<p>Wenn der Abstandsoperator zwischen zwei Operanden weggelassen wird, sucht KorAP nach einem <code>/+w1</code> Abstand:</p>
    

%= doc_query cosmas2 => 'runder Tisch'
    
    

</section>

--------------------------------------------------
    
    

<section id="annotation-operators">
    


<h3>Annotationsoperatoren</h3>
    

%= under_construction
    

%# MORPH and ELEM
    

</section>
    
    

<section id="combination-operators">
    

<h3>Kombinationsoperatoren</h3>

Kombinationsoperatoren
    

%= under_construction
    

%# IN and OV
    

</section>

<section id="annotation-operators">
  <h3>Annotation Operators</h3>
  %= under_construction
  %# MORPH and ELEM
</section>

<section id="combination-operators">
  <h3>Combination Operators</h3>
  %= under_construction
  %# IN and OV
</section>

<section id="area-operators">
  <h3>Area Operators</h3>
  %= under_construction
  %# LINKS, RECHTS, INKLUSIVE, EXKLUSIVE, BED
</section>

