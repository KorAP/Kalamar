% content main => begin

%# Store the id of an active section in the session, so the system is able to directly scroll to the relevant section
%# This should be stored when clicking on a specific query
%# but the remembered section contains the id - not the query

<h2>KorAP-Tutorial</h2>

<p>
 <%= korap_tut_link_to 'Poliqarp+-Tutorial', '/tutorial/poliqarp-plus' %>
 <%= korap_tut_link_to 'Foundry Overview', '/tutorial/foundries' %>
 <%= korap_tut_link_to 'Regular Expressions', '/tutorial/regular-expressions' %>
 <%= korap_tut_link_to 'Wildcards', '/tutorial/wildcards' %>
</p>

<!--
<p>Links to Blog, FAQ, About, Contact ...</p>
<ul>
  <li>Introduction to KorAP</li>
  <li>How to use Poliqarp+ QL?</li>
  <li>How to use Cosmas-II QL?</li>
  <li>How to use CQL?</li>
  <li>API</li>
  <li>Search</li>
</ul>
-->

<section id="tut-intro">
  <h3>Frontend Features</h3>
  <p>This frontend differs to the <%= link_to 'official frontend', 'http://korap.ids-mannheim.de/app/', target => '_blank' %> by providing a serialization view, an integrated tutorial, a comparison view for morphological annotations, and an autocompletion for closed annotations (type in <%= korap_tut_link_to 'foundry prefixes', '/tutorial/foundries' %> like <code>cnx/</code>).</p>
</section>


<section id="tut-examples">

<h3>Example Queries</h3>
%# <p>This is a Tutorial to KorAP. It may be maintained separately (as a Wiki?) and has some nice features - like embedded example queries - just click on the queries below:</p>

<p><strong>Poliqarp</strong>: Find all occurrences of the lemma &quot;baum&quot; as annotated by the <%= korap_tut_link_to 'default foundry', '/tutorial/foundries' %>.</p>
%= korap_tut_query poliqarp => '[base=baum]'

<p><strong>Cosmas-II</strong>: Find all occurrences of the words &quot;der&quot; and &quot;Baum&quot;, in case they are in a maximum distance of 5 tokens. The order is not relevant.</p>
%= korap_tut_query cosmas2 => 'der /w5 Baum'

<p><strong>Poliqarp+</strong>: Find all nominal phrases as annotated using Connexor, that contain an adverb as annotated by OpenNLP.</p>
%= korap_tut_query poliqarp => 'contains(<cnx/c=np>,[opennlp/p=ADV])', cutoff => 1

<p><strong>Poliqarp+</strong>: Find all sentences as annotated by the base foundry that start with a sequence of one token in present tense as annotated by Connexor and the lemma &quot;der&quot; annotated by the <%= korap_tut_link_to 'default foundry', '/tutorial/foundries' %>. Highlight both terms of the sequence.</p>
%= korap_tut_query poliqarp => 'startswith(<s>, {1:[cnx/m=PRES]}{2:[base=der]})', cutoff => 1

<p><strong>Annis</strong>: Find all occurrences of the sequence of two tokens annotated as adverbs by the <%= korap_tut_link_to 'default foundry', '/tutorial/foundries' %>.</p>
%= korap_tut_query annis => 'pos="ADV" & pos="ADV" & #1 . #2'


</section>

% end
