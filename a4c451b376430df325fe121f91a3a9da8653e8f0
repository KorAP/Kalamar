{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "79b3d2dd_aacadf44",
        "filename": "lib/Kalamar/Plugin/Auth.pm",
        "patchSetId": 9
      },
      "lineNbr": 993,
      "author": {
        "id": 19
      },
      "writtenOn": "2023-05-25T12:39:48Z",
      "side": 1,
      "message": "Conventionally I end all helpers returning a promise with \"_p\" which is what Mojolicious also does, see https://metacpan.org/pod/Mojo::UserAgent. Maybe we can establish this convention here.",
      "range": {
        "startLine": 993,
        "startChar": 5,
        "endLine": 993,
        "endChar": 23
      },
      "revId": "a4c451b376430df325fe121f91a3a9da8653e8f0",
      "serverId": "626241b7-b7d0-4197-b843-1ee23887649c"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9675f058_6d01d798",
        "filename": "lib/Kalamar/Plugin/Auth.pm",
        "patchSetId": 9
      },
      "lineNbr": 995,
      "author": {
        "id": 19
      },
      "writtenOn": "2023-05-25T12:39:48Z",
      "side": 1,
      "message": "No reason to reinitialize it here everytime the helper is called.",
      "range": {
        "startLine": 995,
        "startChar": 6,
        "endLine": 995,
        "endChar": 8
      },
      "revId": "a4c451b376430df325fe121f91a3a9da8653e8f0",
      "serverId": "626241b7-b7d0-4197-b843-1ee23887649c"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3a5c7e87_40083dd3",
        "filename": "lib/Kalamar/Plugin/Auth.pm",
        "patchSetId": 9
      },
      "lineNbr": 1023,
      "author": {
        "id": 19
      },
      "writtenOn": "2023-05-25T12:39:48Z",
      "side": 1,
      "message": "Should probably also be state imho. But I have to admit that using state instead of my sometimes turns out to be a weird bug - so care should be taken when using state.",
      "range": {
        "startLine": 1023,
        "startChar": 8,
        "endLine": 1023,
        "endChar": 10
      },
      "revId": "a4c451b376430df325fe121f91a3a9da8653e8f0",
      "serverId": "626241b7-b7d0-4197-b843-1ee23887649c"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6da524e1_e5be9cd6",
        "filename": "lib/Kalamar/Plugin/Auth.pm",
        "patchSetId": 9
      },
      "lineNbr": 1074,
      "author": {
        "id": 19
      },
      "writtenOn": "2023-05-25T12:39:48Z",
      "side": 1,
      "message": "\u0027plugin_list\u0027 should only be set to the stash once after the loop, not before and then iteratively.",
      "range": {
        "startLine": 1074,
        "startChar": 14,
        "endLine": 1074,
        "endChar": 54
      },
      "revId": "a4c451b376430df325fe121f91a3a9da8653e8f0",
      "serverId": "626241b7-b7d0-4197-b843-1ee23887649c"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b592f302_027a6d7d",
        "filename": "lib/Kalamar/Plugin/Auth.pm",
        "patchSetId": 9
      },
      "lineNbr": 1118,
      "author": {
        "id": 19
      },
      "writtenOn": "2023-05-25T12:39:48Z",
      "side": 1,
      "message": "Same here regarding state.",
      "range": {
        "startLine": 1118,
        "startChar": 8,
        "endLine": 1118,
        "endChar": 10
      },
      "revId": "a4c451b376430df325fe121f91a3a9da8653e8f0",
      "serverId": "626241b7-b7d0-4197-b843-1ee23887649c"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d25f0346_0c398c5e",
        "filename": "lib/Kalamar/Plugin/Auth.pm",
        "patchSetId": 9
      },
      "lineNbr": 1150,
      "author": {
        "id": 19
      },
      "writtenOn": "2023-05-25T12:39:48Z",
      "side": 1,
      "message": "Maybe we can also find a good convention for routes. Currently `perl script/kalamar routes` returns various forms. I have no clear opinion on that though.",
      "range": {
        "startLine": 1150,
        "startChar": 13,
        "endLine": 1150,
        "endChar": 26
      },
      "revId": "a4c451b376430df325fe121f91a3a9da8653e8f0",
      "serverId": "626241b7-b7d0-4197-b843-1ee23887649c"
    }
  ]
}